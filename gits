git init  //初始化本地仓库 
git add <文件名>  //添加文件到本地仓库（也是添加到暂存区）
git commit -m "提交的说明" //将在本地仓库的文件提交（也是提交到当前所在的分支）
git status //查看当前仓库的状态 （是否有有未提交的文件）
git log //查看提交历史记录版本（如果出现退不出 按 q键）
git reset --hard HEAD^  //退回上一次提交的版本
git reset --hard commit_id //回到指定版本位置
git reflog  //用来记录你的每一次命令
git diff HEAD --<文件名> //查看工作区和暂存区的区别
git checkout -- <文件名>  //把file文件在工作区的修改全部撤销（git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。）
git reset HEAD <文件名>  //可以把暂存区的修改撤销，重新放回工作区（可以配合 git checkout -- <文件名>）
ssh-keygen -t rsa -C 987250980@qq.com (连敲两次 这是重新生成秘钥SSh)
git remote add origin <远程仓库地址>  //关联远程库
git push -u origin master  //把本地仓库的内容推送到远程内容推送到远程（git push 是把当前分支master 推送到远程）
git push origin master //推送到远程仓库
git switch -c dev //创建并切换到dev 分支
git switch dev //切换到dev分支
git checkout -b dev  //创建并切换到dev 分支
git branch dev //创建dev分支
git checkout dev //切换到dev分支
git branch //查看当前所有分支
git branch -d dev //删除 dev分支
git merge dev //合并dev分支到当前分支
git --version //查看自己的git版本
git update //2.17.1之前的版本升级
git update-git-for-windows  //2.17.1之后的版本 
git log --graph --pretty=oneline --abbrev-commit //带参数的git log 可以看到分支的合并情况
git stash //可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作


